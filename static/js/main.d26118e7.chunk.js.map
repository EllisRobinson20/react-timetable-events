{"version":3,"sources":["App.tsx","index.js"],"names":["HourPreview","hour","defaultAttributes","key","EventPreview","event","classNames","style","background","type","title","name","id","className","event_info","startTime","format","endTime","App","React","monday","moment","tuesday","wednesday","thursday","friday","events","renderHour","renderEvent","hoursInterval","from","to","timeLabel","getDayLabel","day","slice","ReactDOM","render","document","getElementById"],"mappings":"kQASMA,EAAc,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,kBAC3B,OACE,yDAASA,GAAT,IAA4BC,IAAKF,IAC9BA,EADH,MAMEG,EAAe,SAAC,GAII,IAHxBC,EAGuB,EAHvBA,MACAH,EAEuB,EAFvBA,kBACAI,EACuB,EADvBA,WAEA,OACE,yDACMJ,GADN,IAEEK,MAAK,2BACAL,EAAkBK,OADlB,IAEHC,WAA2B,UAAfH,EAAMI,KAAmB,UAAY,YAEnDC,MAAOL,EAAMM,KACbR,IAAKE,EAAMO,GACXC,UAAS,UAAKP,EAAWD,SAEzB,uBAAMQ,UAAWP,EAAWQ,WAA5B,eAA2CT,EAAMM,KAAjD,QACA,uBAAME,UAAWP,EAAWQ,WAA5B,UACGT,EAAMU,UAAUC,OAAO,SAD1B,MACuCX,EAAMY,QAAQD,OAAO,cAoDnDE,EA9CH,WACV,MAAiBC,WAAuB,CACtCC,OAAQ,CACN,CACER,GAAI,EACJD,KAAM,iBACNF,KAAM,QACNM,UAAWM,IAAO,uBAClBJ,QAASI,IAAO,yBAGpBC,QAAS,CACP,CACEV,GAAI,EACJD,KAAM,iBACNF,KAAM,SACNM,UAAWM,IAAO,uBAClBJ,QAASI,IAAO,wBAElB,CACET,GAAI,EACJD,KAAM,iBACNF,KAAM,SACNM,UAAWM,IAAO,uBAClBJ,QAASI,IAAO,yBAGpBE,UAAW,GACXC,SAAU,GACVC,OAAQ,KA5BHC,EAAP,oBA+BA,OACE,8BACE,cAAC,IAAD,CACEA,OAAQA,EACRC,WAAY3B,EACZ4B,YAAaxB,EACbyB,cAAe,CAAEC,KAAM,EAAGC,GAAI,IAC9BC,UAAU,OACVC,YAAa,SAACC,GAAD,OAASA,EAAIC,MAAM,EAAG,SC3E3CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d26118e7.chunk.js","sourcesContent":["import moment from \"moment\";\nimport * as React from \"react\";\nimport {\n  EventPreviewProps,\n  Events,\n  HourPreviewProps,\n  TimeTable,\n} from \"react-timetable-events\";\n\nconst HourPreview = ({ hour, defaultAttributes }: HourPreviewProps) => {\n  return (\n    <div {...defaultAttributes} key={hour}>\n      {hour}h\n    </div>\n  );\n};\n\nconst EventPreview = ({\n  event,\n  defaultAttributes,\n  classNames,\n}: EventPreviewProps) => {\n  return (\n    <div\n      {...defaultAttributes}\n      style={{\n        ...defaultAttributes.style,\n        background: event.type === \"error\" ? \"#720000\" : \"#66B266\",\n      }}\n      title={event.name}\n      key={event.id}\n      className={`${classNames.event}`}\n    >\n      <span className={classNames.event_info}>[ {event.name} ]</span>\n      <span className={classNames.event_info}>\n        {event.startTime.format(\"HH:mm\")} - {event.endTime.format(\"HH:mm\")}\n      </span>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [events] = React.useState<Events>({\n    monday: [\n      {\n        id: 1,\n        name: \"Custom Event 1\",\n        type: \"error\",\n        startTime: moment(\"2018-02-23T11:30:00\"),\n        endTime: moment(\"2018-02-23T13:30:00\"),\n      },\n    ],\n    tuesday: [\n      {\n        id: 2,\n        name: \"Custom Event 2\",\n        type: \"custom\",\n        startTime: moment(\"2018-02-22T12:30:00\"),\n        endTime: moment(\"2018-02-22T14:30:00\"),\n      },\n      {\n        id: 3,\n        name: \"Custom Event 3\",\n        type: \"custom\",\n        startTime: moment(\"2018-02-22T16:30:00\"),\n        endTime: moment(\"2018-02-22T18:45:00\"),\n      },\n    ],\n    wednesday: [],\n    thursday: [],\n    friday: [],\n  });\n\n  return (\n    <div>\n      <TimeTable\n        events={events}\n        renderHour={HourPreview}\n        renderEvent={EventPreview}\n        hoursInterval={{ from: 7, to: 20 }}\n        timeLabel=\"Time\"\n        getDayLabel={(day) => day.slice(0, 3)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}